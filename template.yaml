AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: my-resume-wesite123456

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: cloud-resume-challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "loadcount"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "loadcount"
          KeyType: "HASH"

  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z0451480KW0A6J0MBN8O
      RecordSets:
        - Name: sambullockcv.com
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName

  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: sambullockcv.com
      ValidationMethod: DNS

  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties: 
      DistributionConfig:
        HttpVersion: http2
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref MyCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Aliases:
          - sambullockcv.com
        DefaultCacheBehavior:
        ##  CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          ViewerProtocolPolicy: allow-all
          TargetOriginId: my-resume-wesite123456.s3.us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: my-resume-wesite123456.s3.us-east-1.amazonaws.com
            Id: my-resume-wesite123456.s3.us-east-1.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        Enabled: "true"
        DefaultRootObject: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyWebsite
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Principal: 
              Sid: PublicRead #PublicReadForGetBucketObjects
              AWS: "*"
            Action: 
              -  "s3:GetObject"
              -  "s3:PutObject"
              -  "s3:DeleteObject"          
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref MyWebsite
                - /*
            Effect: Allow
          - Principal: "*"
            Action: 
              -  "s3:ListBucket"          
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref MyWebsite
            Effect: Allow    

  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - DynamoDBCrudPolicy:
            TableName: cloud-resume-challenge
      CodeUri: get_function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /get
            Method: GET

  #--- OptionsMethod:
  #  Type: AWS::ApiGateway::Method
  #  Properties:
  #    AuthorizationType: NONE
  #    RestApiId: jwlqq4c0r7
  #    ResourceId: b1hucstxvb
  #    HttpMethod: OPTIONS
  #    Integration:
  #      IntegrationResponses:
  #      - StatusCode: 200
  #        ResponseParameters:
  #          method.response.header.Access-Control-Allow-Credentials: "'true'"
  #          method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
  #          method.response.header.Access-Control-Allow-Methods: "'GET'"
  #          method.response.header.Access-Control-Allow-Origin: "'*'"
  #        ResponseTemplates:
  #          application/json: ''
  #      PassthroughBehavior: WHEN_NO_MATCH
  #      RequestTemplates:
  #        application/json: '{"statusCode": 200}'
  #      Type: MOCK
  #    MethodResponses:
  #    - StatusCode: 200
  #     ResponseModels:
  #        application/json: 'Empty'
  #      ResponseParameters:
  #          method.response.header.Access-Control-Allow-Credentials: false
  #          method.response.header.Access-Control-Allow-Headers: false
  #          method.response.header.Access-Control-Allow-Methods: false
  #          method.response.header.Access-Control-Allow-Origin: false
  # ---